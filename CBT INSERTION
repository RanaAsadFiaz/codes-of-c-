#include <iostream>
#include <cmath>
using namespace std;
struct node
{
	int data;
	node *right;
	node *left;	
};
class CBT
{
	private:
		node *temp;
		int count;
		int h;
		int data;
	public:
		node *root;
		int jumps;
	CBT()
	{
		temp=NULL;
		count=0;
		h=0;
		data=0;
		root=NULL;
		jumps=0;
	}
	void insertion(node *);
	void show(node *);
	void heap(node *);
};
void CBT::insertion(node *temp)
{
	if(root==NULL)
	{
		root=new node;
		cout<<"ENTER ROOT KI INFO:"<<endl;
		cin>>root->data;
		root->left=NULL;
		root->right=NULL;
		temp=root;
		count++;
		return;
	}
	if(temp->left!=NULL)
	{
		insertion(temp->left);
		jumps++;
	}
	if(jumps<=h)
	{
		if(count==(pow (2,(h+1))-1))
		{
			temp=root;
			while(temp->left!=NULL)
			{
				temp=temp->left;
			}
			temp->left=new node;
			cout<<"ENTER VALUE:"<<endl;
			cin>>temp->left->data;
			temp->left->left=NULL;
			temp->left->right=NULL;
			h++;
			count++;
			return;
		}
	}
	if(temp->left!=NULL&&temp->right==NULL)
	{
		temp->right=new node;
		cout<<"ENTER RIGHT KI VALUE:"<<endl;
		cin>>temp->right->data;
		temp->right->left=NULL;
		temp->right->right=NULL;
		count++;
		return;
	}
	if(jumps=(h-1)&&temp->left==NULL)
	{
		temp->left=new node;
		cout<<"ENTER VALUE:"<<endl;
		cin>>temp->left->data;
		temp->left->left=NULL;
		temp->left->right=NULL;
		count++;
		return;
	}
	if(temp->right!=NULL)
	{
		jumps++;
		insertion(temp->right);
	}
	jumps--;
}
void CBT::show(node *temp)
{
	
		if(temp->left!=NULL)
		{
			show(temp->left);
		}
			cout<<temp->data;
		if(temp->right!=NULL)
		{
		show(temp->right);
		}
}

void CBT::heap(node *temp)
{
	if(temp->left!=NULL)
	{
		heap(temp->left);
	}
	if(temp->left!=NULL&&temp->right!=NULL)
	{
		if(temp->data<temp->left->data)
		{
			data=temp->data;
			temp->data=temp->left->data;
			temp->left->data=data;
		}
		if(temp->data>temp->left->data)
		{
			data=temp->data;
			temp->data=temp->right->data;
			temp->right->data=data;
		}
	}
	if(temp->right!=NULL)
	{
		heap(temp->right);
	}
}
int main()
{
	CBT c1;
	char ch;
	cout<<"ENTER 1 TO INSERT AND 2 TO PRINT:"<<endl;
	cin>>ch;
	switch(ch)
	{
		case '1':
			{
		c1.jumps=0;
		c1.insertion(c1.root);
		c1.jumps=0;
		c1.insertion(c1.root);
		c1.jumps=0;
		c1.insertion(c1.root);
		c1.jumps=0;
		c1.insertion(c1.root);
		c1.jumps=0;
		c1.show(c1.root);
		cout<<endl;
		c1.heap(c1.root);
		c1.show(c1.root);
		break;
		}
		case '2':
			{
		c1.show(c1.root);
		break;				
			}
		}
}
